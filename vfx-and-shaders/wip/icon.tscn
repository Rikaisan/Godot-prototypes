[gd_scene load_steps=22 format=3 uid="uid://t4i33n2h3guu"]

[ext_resource type="Shader" path="res://shaders/fog.gdshader" id="1_tpdp3"]
[ext_resource type="Texture2D" uid="uid://osxnardod1ns" path="res://textures/noise_combined.png" id="2_ow2ai"]
[ext_resource type="Texture2D" uid="uid://cr7r2iqck41f6" path="res://textures/spotlight_3.png" id="3_v5jaf"]
[ext_resource type="Texture2D" uid="uid://sf7vkbymt0hu" path="res://textures/icon.svg" id="4_sa1xd"]
[ext_resource type="Shader" path="res://shaders/flash.gdshader" id="5_aua3r"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_10331"]
shader = ExtResource("1_tpdp3")
shader_parameter/speed = 0.1
shader_parameter/smoke_color = Color(3, 0.6, 3, 1)
shader_parameter/noise_img = ExtResource("2_ow2ai")

[sub_resource type="Shader" id="Shader_s71i4"]
code = "shader_type canvas_item;

uniform sampler2D noise_img : repeat_enable, filter_nearest;
uniform sampler2D gradient_tex : repeat_enable, filter_nearest;
uniform float speed = 1.0;
uniform vec4 smoke_color : source_color;

void fragment() {
	vec2 uv = vec2(UV.x + TIME * speed, UV.y);
	vec2 uv2 = vec2(UV.x, UV.y + TIME * speed);
	vec2 uv3 = vec2(UV.x + TIME * speed, UV.y + TIME * speed);
	
	float gradient = texture(gradient_tex, vec2(UV.y, UV.x)).r;
	float noise_r = texture(noise_img, uv).r;
	float noise_g = texture(noise_img, uv2).g;
	float noise_b = texture(noise_img, uv3).b;
	vec3 new_color = vec3(noise_r, noise_g, noise_b);
	
	float new_alpha = noise_r * noise_g * noise_b;
	
	COLOR.rgb = smoke_color.rgb;
	COLOR.a = clamp(new_alpha * gradient * 15.0, 0.0, 1.0);
}
"

[sub_resource type="Gradient" id="Gradient_fu5r1"]
interpolation_mode = 2
offsets = PackedFloat32Array(0.325203, 0.837398, 1)
colors = PackedColorArray(0, 0, 0, 1, 0.50753, 0.50753, 0.50753, 1, 0.8, 0.8, 0.8, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_fdmqx"]
gradient = SubResource("Gradient_fu5r1")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_obmvu"]
shader = SubResource("Shader_s71i4")
shader_parameter/speed = 0.1
shader_parameter/smoke_color = Color(0.766667, 1, 0, 1)
shader_parameter/noise_img = ExtResource("2_ow2ai")
shader_parameter/gradient_tex = SubResource("GradientTexture1D_fdmqx")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_e6cwf"]
resource_local_to_scene = true
shader = ExtResource("5_aua3r")
shader_parameter/flash_color = Color(1, 1, 1, 1)
shader_parameter/flash_amount = 0.0
shader_parameter/use_alpha = false

[sub_resource type="Animation" id="Animation_mktug"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:material:shader_parameter/flash_amount")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="Animation" id="Animation_our11"]
resource_name = "Hit"
length = 0.166668
step = 0.0166667
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:material:shader_parameter/flash_amount")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.0166667, 0.133333),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [0.0, 1.0, 0.0]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_o0twc"]
_data = {
"RESET": SubResource("Animation_mktug"),
"hit": SubResource("Animation_our11")
}

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_hbwct"]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_56esf"]
operator = 7

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_fcgvs"]
input_name = "color"

[sub_resource type="VisualShader" id="VisualShader_3syfc"]
code = "shader_type canvas_item;



void fragment() {
// Input:4
	vec4 n_out4p0 = COLOR;


// Input:2
	vec2 n_out2p0 = UV;


	vec3 n_out3p0;
// ColorOp:3
	{
		float base = vec3(n_out4p0.xyz).x;
		float blend = vec3(n_out2p0, 0.0).x;
		if (base < 0.5) {
			n_out3p0.x = (base * (blend + 0.5));
		} else {
			n_out3p0.x = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}
	{
		float base = vec3(n_out4p0.xyz).y;
		float blend = vec3(n_out2p0, 0.0).y;
		if (base < 0.5) {
			n_out3p0.y = (base * (blend + 0.5));
		} else {
			n_out3p0.y = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}
	{
		float base = vec3(n_out4p0.xyz).z;
		float blend = vec3(n_out2p0, 0.0).z;
		if (base < 0.5) {
			n_out3p0.z = (base * (blend + 0.5));
		} else {
			n_out3p0.z = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}


// Output:0
	COLOR.rgb = n_out3p0;


}
"
graph_offset = Vector2(-431.561, 85.1074)
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_hbwct")
nodes/fragment/2/position = Vector2(-220, 240)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorOp_56esf")
nodes/fragment/3/position = Vector2(160, 120)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_fcgvs")
nodes/fragment/4/position = Vector2(-220, 120)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 1, 3, 0, 0, 0, 4, 0, 3, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_f4udq"]
shader = SubResource("VisualShader_3syfc")

[sub_resource type="Shader" id="Shader_28dwm"]
code = "shader_type canvas_item;

uniform sampler2D screen_texture : hint_screen_texture, repeat_disable;

//void vertex() {
//	VERTEX += vec2(cos(TIME) * 100.0, sin(TIME) * 100.0);
//}

void fragment() {
	vec4 preview_color = vec4(1, 0.5, 0.2, 1);
	vec4 tex = texture(TEXTURE, UV);
	COLOR = vec4(UV.x * tex.r, UV.y * tex.g, 0.5 * tex.b, 1.0 * tex.a);
	
	COLOR = textureLod(screen_texture, SCREEN_UV * 0.8, 0.0);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_xy7s1"]
shader = SubResource("Shader_28dwm")

[node name="Node2D" type="Node2D"]

[node name="Point Fog" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_10331")
position = Vector2(1, 511)
texture = ExtResource("3_v5jaf")

[node name="Directional Fog" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_obmvu")
position = Vector2(447, 445)
texture = ExtResource("4_sa1xd")

[node name="Flash" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_e6cwf")
position = Vector2(212, 323)
scale = Vector2(0.398438, 0.398438)
texture = ExtResource("4_sa1xd")

[node name="AnimationPlayer" type="AnimationPlayer" parent="Flash"]
autoplay = "hit"
libraries = {
"": SubResource("AnimationLibrary_o0twc")
}

[node name="Visual Shader" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_f4udq")
position = Vector2(209, 241)
scale = Vector2(0.546875, 0.546875)
texture = ExtResource("4_sa1xd")

[node name="Property View" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_xy7s1")
position = Vector2(251, 292)
scale = Vector2(0.546875, 0.546875)
texture = ExtResource("4_sa1xd")
